diff --git a/vendor/magento/module-sales/Setup/UpgradeData.php b/vendor/magento/module-sales/Setup/UpgradeData.php
index 16455d6..7b042fd 100644
--- a/vendor/magento/module-sales/Setup/UpgradeData.php
+++ b/vendor/magento/module-sales/Setup/UpgradeData.php
@@ -173,31 +173,30 @@ class UpgradeData implements UpgradeDataInterface
 
     /**
      * Fill quote_address_id in table sales_order_address if it is empty.
+     *
+     * @param ModuleDataSetupInterface $setup
      */
-    public function fillQuoteAddressIdInSalesOrderAddress()
+    public function fillQuoteAddressIdInSalesOrderAddress(ModuleDataSetupInterface $setup)
     {
-        $addressCollection = $this->addressCollectionFactory->create();
-        /** @var \Magento\Sales\Model\Order\Address $orderAddress */
-        foreach ($addressCollection as $orderAddress) {
-            if (!$orderAddress->getData('quote_address_id')) {
-                $orderId = $orderAddress->getParentId();
-                $addressType = $orderAddress->getAddressType();
-
-                /** @var \Magento\Sales\Model\Order $order */
-                $order = $this->orderFactory->create()->load($orderId);
-                $quoteId = $order->getQuoteId();
-                $quote = $this->quoteFactory->create()->load($quoteId);
-
-                if ($addressType == \Magento\Sales\Model\Order\Address::TYPE_SHIPPING) {
-                    $quoteAddressId = $quote->getShippingAddress()->getId();
-                    $orderAddress->setData('quote_address_id', $quoteAddressId);
-                } elseif ($addressType == \Magento\Sales\Model\Order\Address::TYPE_BILLING) {
-                    $quoteAddressId = $quote->getBillingAddress()->getId();
-                    $orderAddress->setData('quote_address_id', $quoteAddressId);
-                }
-
-                $orderAddress->save();
-            }
-        }
+        $updateOrderAddress = $setup->getConnection()
+            ->select()
+            ->joinInner(
+                ['sales_order' => $setup->getTable('sales_order')],
+                'sales_order_address.parent_id = sales_order.entity_id',
+                ['quote_address_id' => 'quote_address.address_id']
+            )
+            ->joinInner(
+                ['quote_address' => $setup->getTable('quote_address')],
+                'sales_order.quote_id = quote_address.quote_id AND sales_order_address.address_type = quote_address.address_type',
+                []
+            )
+            ->where(
+                'sales_order_address.quote_address_id IS NULL'
+            );
+        $updateOrderAddress = $setup->getConnection()->updateFromSelect(
+            $updateOrderAddress,
+            $setup->getTable('sales_order_address')
+        );
+        $setup->getConnection()->query($updateOrderAddress);
     }
 }
